const readline = require('readline');

// Set up readline interface
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// Function to handle user commands
function handleCommand(command, args) {
  switch (command) {
    case 'greet':
      switch (args[0]) {
        case 'morning':
          console.log('Good morning!');
          break;
        case 'evening':
          console.log('Good evening!');
          break;
        default:
          console.log('Hello!');
      }
      break;

    case 'math':
      switch (args[0]) {
        case 'add':
          if (args.length === 3) {
            const result = parseFloat(args[1]) + parseFloat(args[2]);
            console.log(`Result: ${result}`);
          } else {
            console.log('Usage: math add <num1> <num2>');
          }
          break;
        case 'subtract':
          if (args.length === 3) {
            const result = parseFloat(args[1]) - parseFloat(args[2]);
            console.log(`Result: ${result}`);
          } else {
            console.log('Usage: math subtract <num1> <num2>');
          }
          break;
        default:
          console.log('Supported math commands: add, subtract');
      }
      break;

    case 'weather':
      console.log('Fetching weather information...');
      // Simulate an async operation
      setTimeout(() => {
        switch (args[0]) {
          case 'today':
            console.log('Today\'s weather is sunny.');
            break;
          case 'tomorrow':
            console.log('Tomorrow\'s weather is rainy.');
            break;
          default:
            console.log('Supported weather commands: today, tomorrow');
        }
      }, 1000);
      break;

    default:
      console.log(`Unknown command: ${command}`);
      console.log('Supported commands: greet, math, weather');
  }
}

// Function to prompt user for input
function promptUser() {
  rl.question('Enter a command: ', (input) => {
    const [command, ...args] = input.split(' ');
    handleCommand(command, args);
    promptUser();
  });
}

// Start the prompt
promptUser();

